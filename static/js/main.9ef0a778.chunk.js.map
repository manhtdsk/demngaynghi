{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","Date","getDate","ngay","getMonth","thang","getFullYear","nam","getHours","getMinutes","getSeconds","time","setTime","dateNghi","setDateNghi","show","setShow","today","dateDiffInDays","a","b","utc1","UTC","utc2","Math","floor","difference","useEffect","setInterval","className","style","backgroundImage","onClick","onChange","date","dateString","console","log","pageId","appId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAuGeA,MA7Ff,WAAgB,IAAD,EACWC,oBAAS,IAAIC,MAAOC,WAD/B,mBACNC,EADM,aAEaH,oBAAS,IAAIC,MAAOG,WAAa,IAF9C,mBAENC,EAFM,aAGSL,oBAAS,IAAIC,MAAOK,gBAH7B,mBAGNC,EAHM,aAIWP,oBAAS,IAAIC,MAAOO,WAAa,gBAAY,IAAIP,MAAOQ,aAAe,eAAa,IAAIR,MAAOS,aAAe,aAJzH,mBAINC,EAJM,KAIAC,EAJA,OAMmBZ,mBAAS,IAAIC,KAAK,eANrC,mBAMNY,EANM,KAMIC,EANJ,OAOWd,oBAAS,GAPpB,mBAONe,EAPM,KAOAC,EAPA,KAYPC,EAAQ,IAAIhB,MAAK,IAAIA,MAAOK,cAAgB,MAAO,IAAIL,MAAOG,WAAa,GAAK,KAAM,IAAIH,MAAOC,WAEvG,SAASgB,EAAeC,EAAGC,GACzB,IAEMC,EAAOpB,KAAKqB,IAAIH,EAAEb,cAAea,EAAEf,WAAYe,EAAEjB,WACjDqB,EAAOtB,KAAKqB,IAAIF,EAAEd,cAAec,EAAEhB,WAAYgB,EAAElB,WACvD,OAAOsB,KAAKC,OAAOF,EAAOF,GAJN,OAMtB,IAAMK,EAAaR,EAAeD,EAAOJ,GAgCzC,OA7BAc,qBAAU,WAERC,aAAY,WACVhB,GAAQ,IAAIX,MAAOO,WAAa,gBAAY,IAAIP,MAAOQ,aAAe,eAAa,IAAIR,MAAOS,aAAe,cAG5G,OACF,CAACC,IAEJgB,qBAAU,WACWT,EAAeD,EAAOJ,KAExC,CAACV,IAsBF,sBAAK0B,UAAU,MAAMC,MAAO,CAAEC,gBAAiB,uBAA/C,UACE,sBAAKF,UAAU,OAAf,UAEE,kCAAK,4BAAqB1B,EAAO,aAAYE,EAAQ,aAAUE,KAC/D,kCAAKI,KAHP,+BAKM,wBAAQkB,UAAU,UAAUG,QAAS,WACvChB,GAASD,IADP,SAIDA,EACG,UACA,+BAILA,EACG,cAAC,IAAD,CAAYkB,SApCtB,SAAkBC,EAAMC,GAGtBC,QAAQC,IAAIF,GACZC,QAAQC,WAAWF,GACD,IAAdA,IAAkBA,EAAa,IAAIlC,KAAK,eAC5Ca,EAAY,IAAIb,KAAKkC,IAEFjB,EAAeD,EAAOJ,MA6BjC,MAKN,sBAAKgB,UAAU,SAAf,oBACOH,EADP,cAIA,cAAC,IAAD,CACEY,OAAO,kBACPC,MAAM,wBCrFCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9ef0a778.chunk.js","sourcesContent":["// import 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\n\r\nimport './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DatePicker } from 'antd';\r\n\r\nimport MessengerCustomerChat from 'react-messenger-customer-chat';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [ngay, setNgay] = useState(new Date().getDate())\r\n  const [thang, setThang] = useState(new Date().getMonth() + 1)\r\n  const [nam, setNam] = useState(new Date().getFullYear())\r\n  const [time, setTime] = useState(new Date().getHours() + \" Giờ : \" + new Date().getMinutes() + \" Phút : \" + new Date().getSeconds() + \" Giây\")\r\n\r\n  const [dateNghi, setDateNghi] = useState(new Date('2021/03/11'))\r\n  const [show, setShow] = useState(false)\r\n\r\n  // var dateNghi = new Date('2021/03/11')\r\n\r\n  //   const  today = new Date(new Date().getFullYear()+'-'+(new Date().getMonth()+1)+'-'+new Date().getDate())\r\n  const today = new Date(new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getDate())\r\n\r\n  function dateDiffInDays(a, b) {\r\n    const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n    // Discard the time and time-zone information.\r\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\r\n    return Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n  }\r\n  const difference = dateDiffInDays(today, dateNghi)\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    setInterval(function () {\r\n      setTime(new Date().getHours() + \" Giờ : \" + new Date().getMinutes() + \" Phút : \" + new Date().getSeconds() + \" Giây\")\r\n\r\n\r\n    }, 1000);\r\n  }, [time]);\r\n\r\n  useEffect(() => {\r\n    const difference = dateDiffInDays(today, dateNghi)\r\n\r\n  }, [ngay])\r\n\r\n\r\n  function onChange(date, dateString) {\r\n    // console.log(dateString);\r\n\r\n    console.log(dateString)\r\n    console.log(typeof dateString)\r\n    if (dateString == '') dateString = new Date('2021/03/11')\r\n    setDateNghi(new Date(dateString))\r\n\r\n    const difference = dateDiffInDays(today, dateNghi)\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n\r\n\r\n\r\n\r\n    <div className=\"App\" style={{ backgroundImage: \"url(./img/nen2.jpg)\" }}>\r\n      <div className='head'>\r\n\r\n        <p> {\"Hôm nay là Ngày \" + ngay + \" tháng \" + thang + \" Năm \" + nam}</p>\r\n        <p> {time}</p>\r\n          Nghỉ ngày 11-03-2021\r\n            <button className='nutnhan' onClick={() => {\r\n          setShow(!show)\r\n\r\n        }}>\r\n          {show\r\n            ? \"Ẩn\"\r\n            : \"Chọn lại ngày\"}\r\n\r\n        </button>\r\n\r\n        {show\r\n          ? <DatePicker onChange={onChange} />\r\n          : ''\r\n        }\r\n\r\n\r\n      </div>\r\n      <div className='endday'>\r\n        Còn {difference} ngày\r\n      </div>\r\n\r\n      <MessengerCustomerChat\r\n        pageId=\"108457081295779\"\r\n        appId=\"742330696473947\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}